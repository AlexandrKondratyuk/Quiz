{"version":3,"sources":["components/Navigation/Drawer/Drawer.css","components/Navigation/MenuToggle/MenuToggle.css","containers/Quiz/Quiz.css","components/ActiveQuiz/ActiveQuiz.css","components/ActiveQuiz/AnswerItem/AnswerItem.css","components/FinishedQuiz/FinishedQuiz.css","components/UI/Button/Button.css","components/UI/Loader/Loader.css","containers/Auth/Auth.css","components/UI/Input/Input.css","hoc/Layout/Layout.css","components/UI/BackDrop/BackDrop.css","components/ActiveQuiz/AnswersList/AnswersList.css","containers/QuizList/QuizList.css","containers/QuizCreator/QuizCreator.css","components/UI/Select/Select.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/BackDrop/BackDrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","axios/axios-quiz.js","components/UI/Loader/Loader.js","containers/Quiz/Quiz.js","containers/QuizList/QuizList.js","components/UI/Input/Input.js","containers/Auth/Auth.js","form/formFramework.js","components/UI/Select/Select.js","hoc/Auxiliary/Auxiliary.js","containers/QuizCreator/QuizCreator.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Drawer","close","active","MenuToggle","open","Quiz","QuizWrapper","ActiveQuiz","Question","AnswerItem","success","error","FinishedQuiz","Button","primary","Loader","lds-roller","center","Auth","AuthForm","Input","invalid","Layout","BackDrop","AnswersList","QuizList","QuizCreator","Select","props","cls","classes","isOpen","push","react_default","a","createElement","className","join","onClick","onToggle","links","to","label","exact","clickHandler","_this","onClose","_this2","this","map","link","index","key","NavLink","activeClassName","Fragment","renderLinks","UI_BackDrop_BackDrop","Component","state","menu","toggleMenuHandler","setState","menuCloseHandler","Navigation_Drawer_Drawer","Navigation_MenuToggle_MenuToggle","children","onAnswerClick","answer","id","text","answers","ActiveQuiz_AnswerItem_AnswerItem","answerNumber","question","quizLength","ActiveQuiz_AnswersList_AnswersList","type","disabled","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","UI_Button_Button","onRetry","Link","axios","create","baseURL","isFinished","activeQuestion","answerState","loading","onAnswerClickHandler","answerId","rightAnswerId","defineProperty","timeout","window","setTimeout","isQuizFinished","console","log","clearTimeout","retryHandler","get","concat","match","params","response","data","_context","t0","UI_Loader_Loader","components_FinishedQuiz_FinishedQuiz","components_ActiveQuiz_ActiveQuiz","quizes","name","forEach","renderQuizes","isInvalid","_ref","valid","touched","shouldValidate","inputType","htmlFor","Math","random","value","onChange","errorMessage","isFormValid","formControls","email","validation","required","password","minLength","loginHandler","_callee","authData","regenerator_default","wrap","prev","next","returnSecureToken","post","sent","stop","registerHandler","_callee2","_context2","submitHandler","event","preventDefault","onChangeHandler","controlName","objectSpread","control","target","validateControl","isValid","trim","is","UI_Input_Input","onSubmit","renderInput","createControl","config","options","option","Auxiliary","createOptionControl","number","createFormControl","option1","option2","option3","option4","addQuestionHandler","_this$state$formContr","questionItem","createQuizHandler","changeHandler","arguments","undefined","validate","hasOwnProperty","validateForm","selectChangeHandler","Auxiliary_Auxiliary","select","UI_Select_Select","renderInputs","App","hoc_Layout_Layout","Switch","Route","path","component","Boolean","location","hostname","app","BrowserRouter","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9802ec0f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer__Drawer--2Nzcl\",\"close\":\"Drawer__close--3eUiV\",\"active\":\"Drawer__active--WxScd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle__MenuToggle--1mqO0\",\"open\":\"MenuToggle__open--1kMjG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz__Quiz--3J8Ip\",\"QuizWrapper\":\"Quiz__QuizWrapper--2cJp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz__ActiveQuiz--1xPLH\",\"Question\":\"ActiveQuiz__Question--2AtZS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem__AnswerItem--FMFZL\",\"success\":\"AnswerItem__success--tAKqq\",\"error\":\"AnswerItem__error--27Deq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz__FinishedQuiz--3-Dtz\",\"success\":\"FinishedQuiz__success--1N7XY\",\"error\":\"FinishedQuiz__error--34veZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button--QI7b2\",\"error\":\"Button__error--tZCD8\",\"success\":\"Button__success--3d-85\",\"primary\":\"Button__primary--2Lss2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader__Loader--2iSOk\",\"lds-roller\":\"Loader__lds-roller--1TSlh\",\"center\":\"Loader__center--1YZNW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth__Auth--2YUr1\",\"AuthForm\":\"Auth__AuthForm--2Xb4F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input--s67N0\",\"invalid\":\"Input__invalid--flTJ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout__Layout--2C2_c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackDrop\":\"BackDrop__BackDrop--wZny4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList__AnswersList--1WLwo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList__QuizList--2oxZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator__QuizCreator--1_s5y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select__Select--1rPbL\"};","import React from 'react'\nimport classes from './MenuToggle.css'\n\nconst MenuToggle = props => {\n    const cls = [\n        classes.MenuToggle,\n        'fa'\n    ]\n\n    if (props.isOpen) {\n        cls.push('fa-times')\n        cls.push(classes.open)\n    } else {\n        cls.push('fa-bars')\n    }\n\n    return (\n        <i\n            className={cls.join(' ')}\n            onClick={props.onToggle}\n        />\n    )\n}\n\nexport default MenuToggle","import React from 'react'\nimport classes from './BackDrop.css'\n\nconst BackDrop = props => <div className={classes.BackDrop} onClick={props.onClick}/>\n\nexport default BackDrop","import React, {Component} from 'react'\nimport classes from './Drawer.css'\nimport  {NavLink} from 'react-router-dom'\nimport BackDrop from '../../UI/BackDrop/BackDrop'\n\nconst links = [\n    {to: '/', label: 'List', exact: true},\n    {to: '/auth', label: 'Authorization', exact: false},\n    {to: '/quiz-creator', label: 'Create test', exact: false}\n];\n\nclass Drawer extends Component {\n    clickHandler = () => {\n        this.props.onClose();\n    };\n\n    renderLinks() {\n        return links.map((link, index) => {\n            return (\n                <li key={index}>\n                    <NavLink\n                        to={link.to}\n                        exact={link.exact}\n                        activeClassName={classes.active}\n                        onClick={this.clickHandler}\n                    >\n                        {link.label}\n                    </NavLink>\n                </li>\n            )\n        })\n    }\n\n    render() {\n        const cls = [classes.Drawer]\n\n        if (!this.props.isOpen) {\n            cls.push(classes.close)\n        }\n\n        return (\n            <React.Fragment>\n                <nav className={cls.join(' ')}>\n                    <ul>\n                        {this.renderLinks()}\n                    </ul>\n                </nav>\n                { this.props.isOpen ?  <BackDrop onClick={this.props.onClose}/> : null }\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Drawer","import React, {Component} from 'react'\nimport classes from './Layout.css'\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle'\nimport Drawer from '../../components/Navigation/Drawer/Drawer'\n\n\nclass Layout extends Component {\n    state = {\n        menu: false\n    }\n\n    toggleMenuHandler = () => {\n        this.setState({\n            menu: !this.state.menu\n        })\n    }\n\n    menuCloseHandler = () => {\n        this.setState({\n            menu: false\n        })\n    }\n\n    render() {\n        return (\n            <div className={classes.Layout}>\n                <Drawer\n                    isOpen={this.state.menu}\n                    onClose={this.menuCloseHandler}\n                />\n                <MenuToggle\n                    onToggle={this.toggleMenuHandler}\n                    isOpen={this.state.menu}\n                />\n\n                <main>\n                    {this.props.children}\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default Layout","import React from 'react'\nimport classes from './AnswerItem.css'\n\nconst AnswerItem = (props) => {\n    const cls =  [classes.AnswerItem]\n\n    if (props.state) {\n        cls.push(classes[props.state])\n    }\n\n    return (\n        <li\n            className={cls.join(' ')}\n            onClick={() => props.onAnswerClick(props.answer.id) }\n        >\n            { props.answer.text }\n        </li>\n    )\n}\n\nexport default AnswerItem","import React from 'react'\nimport classes from './AnswersList.css'\nimport AnswerItem from '../AnswerItem/AnswerItem'\n\nconst AnswersList = props => (\n    <ul className={classes.AnswersList}>\n        <ul> {props.answers.map((answer, index) => {\n            return (\n                <AnswerItem\n                    key={index}\n                    answer={answer}\n                    onAnswerClick = {props.onAnswerClick}\n                    state={props.state ? props.state[answer.id] : null}\n                />\n            )\n        })} </ul>\n    </ul>\n)\n\nexport default AnswersList","import React from 'react'\nimport classes from './ActiveQuiz.css'\nimport AnswersList from './AnswersList/AnswersList'\n\nconst ActiveQuiz = (props) => (\n    <div className={classes.ActiveQuiz}>\n        <p className={classes.Question}>\n            <span>\n                <strong>{props.answerNumber}.</strong>&nbsp;\n                {props.question}\n            </span>\n\n            <small> {props.answerNumber} from {props.quizLength} </small>\n        </p>\n\n        <AnswersList\n            state={props.state}\n            answers={props.answers}\n            onAnswerClick = {props.onAnswerClick}\n        />\n\n    </div>\n)\n\nexport default ActiveQuiz","import React from 'react'\n\nimport classes from './Button.css'\n\nconst Button = props => {\n    const cls = [\n        classes.Button,\n        classes[props.type]\n    ]\n\n    return (\n        <button\n            onClick={props.onClick}\n            className={cls.join(' ')}\n            disabled={props.disabled}\n        >\n            {props.children}\n        </button>\n    )\n}\n\nexport default Button","import React from 'react'\nimport classes from './FinishedQuiz.css'\nimport Button from '../UI/Button/Button'\nimport {Link} from 'react-router-dom'\n\nconst FinishedQuiz = props => {\n    const successCount = Object.keys(props.results).reduce((total, key) => {\n        if (props.results[key] === 'success') {\n            total++;\n        }\n        return total\n    }, 0)\n\n    return (\n        <div className={classes.FinishedQuiz}>\n            <ul>\n                {props.quiz.map((quizItem, index) => {\n                    const cls = [\n                        'fa',\n                        props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\n                        classes[props.results[quizItem.id]]\n                    ]\n\n                    return (\n                        <li\n                            key={index}\n                        >\n                            <strong>{index + 1}</strong>.&nbsp;\n                            {quizItem.question}\n                            <i className={cls.join(' ')}/>\n                        </li>\n                    )\n                })}\n            </ul>\n\n            <p> Correct {successCount} from {props.quiz.length} </p>\n            <div>\n                <Button onClick={props.onRetry} type='primary'>Retry</Button>\n                <Link to='/'>\n                    <Button type='success'>Go to list tests</Button>\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default FinishedQuiz","import axios from 'axios'\n\nexport default axios.create({\n    baseURL: 'https://react-quiz-8cba8.firebaseio.com/'\n})","import React from 'react'\nimport classes from './Loader.css'\n\nconst Loader = props => (\n    <div className={classes.center}>\n        <div className={classes.Loader}>\n            <div/>\n            <div/>\n            <div/>\n            <div/>\n            <div/>\n            <div/>\n            <div/>\n            <div/>\n        </div>\n    </div>\n);\n\nexport default Loader;","import React, {Component} from 'react'\nimport classes from './Quiz.css'\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz'\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz'\nimport axios from '../../axios/axios-quiz'\nimport Loader from \"../../components/UI/Loader/Loader\";\n\nclass Quiz extends Component {\n    state = {\n        results: {},        // { [id]: 'success'  or   'error' }\n        isFinished: false,\n        activeQuestion: 0,\n        answerState: null,    // { [id] : 'success'  or   'error' }\n        quiz: [],\n        loading: true\n    }\n\n    onAnswerClickHandler = answerId => {\n        if (this.state.answerState) {\n            const key = Object.keys(this.state.answerState)[0]\n            if (this.state.answerState[key] === 'success') {\n                return\n            }\n        }\n\n        const question = this.state.quiz[this.state.activeQuestion]\n        const results = this.state.results\n\n        if (question.rightAnswerId === answerId) {\n            if (!results[question.id]) {\n                results[question.id] = 'success'\n            }\n\n            this.setState({\n                answerState: {[answerId]: 'success'},\n                results\n            })\n\n            const timeout = window.setTimeout(() => {\n                if (this.isQuizFinished()) {\n                    this.setState({\n                        isFinished: true\n                    })\n                    console.log('Finished!')\n                } else {\n                    this.setState({\n                        activeQuestion: this.state.activeQuestion + 1,\n                        answerState: null\n                    })\n                }\n                window.clearTimeout(timeout);\n            }, 1000)\n        } else {\n            results[question.id] = 'error'\n            this.setState({\n                answerState: {[answerId]: 'error'},\n                results                                 //  equal  results: this.state.results\n            })\n        }\n    }\n\n    isQuizFinished() {\n        return this.state.activeQuestion + 1 === this.state.quiz.length\n    }\n\n    retryHandler = () => {\n        this.setState({\n            activeQuestion: 0,\n            answerState: null,\n            isFinished: false,\n            results: {}\n        })\n    }\n\n    async componentDidMount() {\n\n        try {\n            const response = await axios.get(`/quizes/${this.props.match.params.id}.json`);\n            const quiz = response.data;\n\n            this.setState({\n                quiz,\n                loading: false\n            });\n        } catch (e) {\n            console.log(e);\n        }\n\n    }\n\n    render() {\n        return (\n            <div className={classes.Quiz}>\n\n                <div className={classes.QuizWrapper}>\n                    <h1> Answer the questions </h1>\n\n                    {\n                        this.state.loading\n                            ? <Loader/>\n                            : this.state.isFinished\n                            ? <FinishedQuiz\n                                results={this.state.results}\n                                quiz={this.state.quiz}\n                                onRetry={this.retryHandler}\n                            />\n                            :\n                            <ActiveQuiz\n                                answers={this.state.quiz[this.state.activeQuestion].answers}\n                                question={this.state.quiz[this.state.activeQuestion].question}\n                                onAnswerClick={this.onAnswerClickHandler}\n                                quizLength={this.state.quiz.length}\n                                answerNumber={this.state.activeQuestion + 1}\n                                state={this.state.answerState}\n                            />\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Quiz","import React, {Component} from 'react'\nimport classes from './QuizList.css'\nimport {NavLink} from \"react-router-dom\"\nimport Loader from '../../components/UI/Loader/Loader'\nimport axios from '../../axios/axios-quiz'\n\n\nexport default class QuizList extends Component {\n\n    state = {\n        quizes: [],\n        loading: true\n    };\n\n    renderQuizes() {\n        return this.state.quizes.map(quiz => {\n            return (\n                <li\n                    key={quiz.id}\n                >\n                    <NavLink to={'/quiz/' + quiz.id}>\n                        {quiz.name}\n                    </NavLink>\n                </li>\n            )\n        });\n    }\n\n    async componentDidMount() {\n        try {\n            const response = await axios.get('/quizes.json');\n\n            const quizes = [];\n\n            Object.keys(response.data).forEach((key, index) => {\n                quizes.push({\n                    id: key,\n                    name: `Test #${index + 1}`\n                })\n            });\n\n            this.setState({\n                quizes,\n                loading: false\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n\n    render() {\n        return (\n            <div className={classes.QuizList}>\n                <div>\n                    <h1>List of tests</h1>\n\n                    {this.state.loading\n                        ? <Loader/>\n                        : <ul>\n                            {this.renderQuizes()}\n                        </ul>\n                    }\n\n                </div>\n                <h1>Quiz List</h1>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport classes from './Input.css'\n\nfunction isInvalid ({valid, touched, shouldValidate}) {\n    return !valid && shouldValidate && touched;\n}\n\nconst Input = props => {\n    const inputType = props.type || 'text';\n    const cls = [classes.Input];\n    const htmlFor = `${inputType}-${Math.random()}`;\n\n    if (isInvalid(props)) {\n        cls.push(classes.invalid);\n    }\n\n\n\n    return (\n        <div className={cls.join(' ')}>\n            <label htmlFor={htmlFor}>{props.label}</label>\n            <input\n                type={inputType}\n                id={htmlFor}\n                value={props.value}\n                onChange={props.onChange}\n            />\n\n            {\n                isInvalid(props)\n                    ? <span>{props.errorMessage || 'Input correct value'}</span>\n                    : null\n            }\n\n\n        </div>\n    )\n};\n\nexport default Input;","import React, {Component} from 'react'\nimport classes from './Auth.css'\nimport Button from '../../components/UI/Button/Button'\nimport Input from '../../components/UI/Input/Input'\nimport is from 'is_js'\nimport axios from 'axios'\n\n\nexport default class Auth extends Component {\n    state = {\n        isFormValid: false,\n        formControls: {\n            email: {\n                value: '',\n                type: 'email',\n                label: 'Email',\n                errorMessage: 'Input correct email',\n                valid: false,\n                touched: false,\n                validation: {\n                    required: true,\n                    email: true\n                }\n            },\n            password: {\n                value: '',\n                type: 'password',\n                label: 'Password',\n                errorMessage: 'Input correct password',\n                valid: false,\n                touched: false,\n                validation: {\n                    required: true,\n                    minLength: 6\n                }\n            }\n        }\n    };\n\n\n    loginHandler = async () => {\n        const authData = {\n            email: this.state.formControls.email.value,\n            password: this.state.formControls.password.value,\n            returnSecureToken: true\n        }\n\n        try {\n            const response = await axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyAHkESY96NPWY5_57AMuwqF6qN4E2wISEE', authData)\n\n            console.log(response.data);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    registerHandler = async () => {\n        const authData = {\n            email: this.state.formControls.email.value,\n            password: this.state.formControls.password.value,\n            returnSecureToken: true\n        }\n\n        try {\n            const response = await axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyAHkESY96NPWY5_57AMuwqF6qN4E2wISEE', authData)\n\n            console.log(response.data);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    submitHandler = event => {\n        event.preventDefault();\n    };\n\n    validateControl(value, validation) {\n        if (!validation) {\n            return true;\n        }\n        let isValid = true;\n\n        if (validation.required) {\n            isValid = value.trim() !== '' && isValid\n        }\n\n        if (validation.email) {\n            isValid = is.email(value) && isValid;\n        }\n\n        if (validation.minLength) {\n            isValid = value.length >= validation.minLength && isValid;\n        }\n\n        return isValid;\n    }\n\n    onChangeHandler = (event, controlName) => {\n        const formControls = {...this.state.formControls};\n        const control = {...formControls[controlName]};\n\n        control.value = event.target.value;\n        control.touched = true;\n        control.valid = this.validateControl(control.value, control.validation);\n\n        formControls[controlName] = control;\n\n        let isFormValid = true;\n\n        Object.keys(formControls).forEach(name => {\n           isFormValid = formControls[name].valid && isFormValid\n        });\n\n        this.setState({\n            formControls, isFormValid\n        });\n    };\n\n    renderInput() {\n        return Object.keys(this.state.formControls).map((controlName, index) => {\n            const control = this.state.formControls[controlName];\n            return (\n                <Input\n                    key={controlName + index}\n                    type={control.type}\n                    value={control.value}\n                    valid={control.valid}\n                    touched={control.touched}\n                    label={control.label}\n                    shouldValidate={!!control.validation}\n                    errorMessage={control.errorMessage}\n                    onChange={event => this.onChangeHandler(event, controlName)}\n                />\n            );\n        });\n    };\n\n    render() {\n        return (\n            <div className={classes.Auth}>\n                <div>\n                    <h1>Authorization</h1>\n\n                    <form onSubmit={this.submitHandler} className={classes.AuthForm}>\n\n                        {this.renderInput()}\n\n                        <Button\n                            type='success'\n                            onClick={this.loginHandler}\n                            disabled = {!this.state.isFormValid}\n                        >\n                            Log In\n                        </Button>\n\n                        <Button\n                            type='primary'\n                            onClick={this.registerHandler}\n                            disabled = {!this.state.isFormValid}\n                        >\n                            Log On\n                        </Button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}","export function createControl (config, validation) {\n    return {\n        ...config,\n        validation,\n        valid: !validation,\n        touched: false,\n        value: ''\n    }\n}\n\nexport function validate(value, validation = null) {\n    if (!validation) {\n        return true;\n    }\n\n    let isValid = true;\n\n    if (validation.required) {\n        isValid = value.trim() !== '' && isValid;\n    }\n\n    return isValid;\n}\n\nexport function validateForm(formControls) {\n    let isFormValid = true;\n\n    for (let control in formControls) {\n        if (formControls.hasOwnProperty(control)) {\n            isFormValid = formControls[control].valid && isFormValid;\n        }\n    }\n\n    return isFormValid;\n}","import React from 'react'\nimport classes from './Select.css'\n\nconst Select = props => {\n    const htmlFor = `${props.label}-${Math.random()}`\n\n    return (\n        <div className={classes.Select}>\n            <label htmlFor={htmlFor}>{props.label}</label>\n            <select\n                id={htmlFor}\n                value={props.value}\n                onChange={props.onChange}\n            >\n                {props.options.map((option, index) => {\n                    return (\n                        <option\n                            value={option.value}\n                            key={option.value + index}\n                        >\n                            {option.text}\n                        </option>\n                    )\n                })}\n            </select>\n        </div>\n    )\n}\n\nexport default Select","const Auxiliary = props => props.children;\n\nexport default Auxiliary;","import React, {Component} from 'react'\nimport classes from './QuizCreator.css'\nimport Button from '../../components/UI/Button/Button'\nimport {createControl, validate, validateForm} from '../../form/formFramework'\nimport Input from '../../components/UI/Input/Input'\nimport Select from '../../components/UI/Select/Select'\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary'\nimport axios from '../../axios/axios-quiz'\n\nfunction createOptionControl(number) {\n    return createControl({\n        label: `Variant ${number}`,\n        errorMessage: 'Value can\\'t be empty',\n        id: number\n    }, {required: true});\n}\n\nfunction createFormControl() {\n    return {\n        question: createControl({\n            label: 'Enter question',\n            errorMessage: 'Question can\\'t be empty'\n        }, {required: true}),\n        option1: createOptionControl(1),\n        option2: createOptionControl(2),\n        option3: createOptionControl(3),\n        option4: createOptionControl(4)\n    };\n}\n\nexport default class QuizCreator extends Component {\n\n    state = {\n        quiz: [],\n        isFormValid: false,\n        rightAnswerId: 1,\n        formControls: createFormControl()\n    };\n\n    submitHandler = event => {\n        event.preventDefault();\n    };\n\n    addQuestionHandler = (event) => {\n        event.preventDefault();\n\n        const quiz = this.state.quiz.concat();\n        const index = quiz.length + 1;\n        const {question, option1, option2, option3, option4} = this.state.formControls;\n\n        const questionItem = {\n            question: question.value,\n            id: index,\n            rightAnswerId: this.state.rightAnswerId,\n            answers: [\n                {text: option1.value, id: option1.id},\n                {text: option2.value, id: option2.id},\n                {text: option3.value, id: option3.id},\n                {text: option4.value, id: option4.id}\n            ]\n        };\n        quiz.push(questionItem);\n\n        this.setState({\n            quiz,\n            isFormValid: false,\n            rightAnswerId: 1,\n            formControls: createFormControl()\n        });\n    };\n\n    createQuizHandler = async event => {\n        event.preventDefault();\n\n        try {\n            await axios.post('/quizes.json', this.state.quiz);\n\n            this.setState({\n                quiz: [],\n                isFormValid: false,\n                rightAnswerId: 1,\n                formControls: createFormControl()\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    changeHandler = (value, controlName) => {\n        const formControls = {...this.state.formControls};\n        const control = {...formControls[controlName]};\n\n        control.touched = true;\n        control.value = value;\n        control.valid = validate(control.value, control.validation);\n\n        formControls[controlName] = control;\n\n        this.setState ({\n            formControls,\n            isFormValid: validateForm(formControls)\n        });\n    };\n\n    renderInputs() {\n        return Object.keys(this.state.formControls).map((controlName, index) => {\n            const control = this.state.formControls[controlName];\n\n            return (\n                <Auxiliary key={controlName + index}>\n                    <Input\n                        label={control.label}\n                        value={control.value}\n                        valid={control.valid}\n                        shouldValidate={!!control.validation}\n                        touched={control.touched}\n                        errorMessage={control.errorMessage}\n                        onChange={event => this.changeHandler(event.target.value, controlName)}\n\n                    />\n\n                    {index === 0 ? <hr/> : null}\n                </Auxiliary>\n\n            );\n        });\n    }\n\n    selectChangeHandler = event => {\n        this.setState ({\n            rightAnswerId: +event.target.value\n        });\n    };\n\n    render() {\n        const select = <Select\n            label='Choose correct answer'\n            value={this.state.rightAnswerId}\n            onChange={this.selectChangeHandler}\n            options={[\n                {text:'1', value: 1},\n                {text:'2', value: 2},\n                {text:'3', value: 3},\n                {text:'4', value: 4},\n            ]}\n        />;\n\n        return (\n            <div className={classes.QuizCreator}>\n                <div>\n                    <h1>Creating test</h1>\n\n                    <form onSubmit={this.submitHandler}>\n\n                        {this.renderInputs()}\n\n\n                        { select }\n\n                        <Button\n                            type='primary'\n                            onClick={this.addQuestionHandler}\n                            disabled={!this.state.isFormValid}\n                        >\n                            Add question\n                        </Button>\n\n                        <Button\n                            type='success'\n                            onClick={this.createQuizHandler}\n                            disabled= {this.state.quiz.length === 0}\n                        >\n                            Create test\n                        </Button>\n                    </form>\n\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport {Route, Switch} from 'react-router-dom'\nimport Layout from './hoc/Layout/Layout'\nimport Quiz from './containers/Quiz/Quiz'\nimport QuizList from './containers/QuizList/QuizList'\nimport Auth from './containers/Auth/Auth'\nimport QuizCreator from './containers/QuizCreator/QuizCreator'\n\nclass App extends Component {\n  render() {\n    return (\n      <Layout>\n          <Switch>\n            <Route path='/auth' component={Auth} />\n            <Route path='/quiz-creator' component={QuizCreator} />\n            <Route path='/quiz/:id' component={Quiz} />\n            <Route path='/' component={QuizList} />\n          </Switch>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst app = (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n);\n\n\nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}