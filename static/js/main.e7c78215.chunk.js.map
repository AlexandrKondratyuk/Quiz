{"version":3,"sources":["components/Navigation/Drawer/Drawer.css","components/Navigation/MenuToggle/MenuToggle.css","containers/Quiz/Quiz.css","components/ActiveQuiz/ActiveQuiz.css","components/ActiveQuiz/AnswerItem/AnswerItem.css","components/FinishedQuiz/FinishedQuiz.css","components/UI/Button/Button.css","hoc/Layout/Layout.css","components/UI/BackDrop/BackDrop.css","components/ActiveQuiz/AnswersList/AnswersList.css","containers/QuizList/QuizList.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/BackDrop/BackDrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","containers/Quiz/Quiz.js","containers/QuizList/QuizList.js","containers/Auth/Auth.js","containers/QuizCreator/QuizCreator.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Drawer","close","active","MenuToggle","open","Quiz","QuizWrapper","ActiveQuiz","Question","AnswerItem","success","error","FinishedQuiz","Button","primary","Layout","BackDrop","AnswersList","QuizList","props","cls","classes","isOpen","push","react_default","a","createElement","className","join","onClick","onToggle","links","to","label","exact","clickHandler","_this","onClose","_this2","this","map","link","index","key","NavLink","activeClassName","Fragment","renderLinks","UI_BackDrop_BackDrop","Component","state","menu","toggleMenuHandler","setState","menuCloseHandler","Navigation_Drawer_Drawer","Navigation_MenuToggle_MenuToggle","children","onAnswerClick","answer","id","text","answers","ActiveQuiz_AnswerItem_AnswerItem","answerNumber","question","quizLength","ActiveQuiz_AnswersList_AnswersList","type","disabled","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","UI_Button_Button","onRetry","Link","isFinished","activeQuestion","answerState","rightAnswerId","onAnswerClickHandler","answerId","defineProperty","timeout","window","setTimeout","isQuizFinished","console","log","clearTimeout","retryHandler","match","params","components_FinishedQuiz_FinishedQuiz","components_ActiveQuiz_ActiveQuiz","renderQuizes","Auth","QuizCreator","App","hoc_Layout_Layout","Switch","Route","path","component","Boolean","location","hostname","app","BrowserRouter","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sFACAA,EAAAC,QAAA,CAAkBC,OAAA,wBAAAC,MAAA,uBAAAC,OAAA,0CCAlBJ,EAAAC,QAAA,CAAkBI,WAAA,gCAAAC,KAAA,6CCAlBN,EAAAC,QAAA,CAAkBM,KAAA,oBAAAC,YAAA,6CCAlBR,EAAAC,QAAA,CAAkBQ,WAAA,gCAAAC,SAAA,gDCAlBV,EAAAC,QAAA,CAAkBU,WAAA,gCAAAC,QAAA,6BAAAC,MAAA,6CCAlBb,EAAAC,QAAA,CAAkBa,aAAA,oCAAAF,QAAA,+BAAAC,MAAA,+CCAlBb,EAAAC,QAAA,CAAkBc,OAAA,wBAAAF,MAAA,uBAAAD,QAAA,yBAAAI,QAAA,6CCAlBhB,EAAAC,QAAA,CAAkBgB,OAAA,0CCAlBjB,EAAAC,QAAA,CAAkBiB,SAAA,+CCAlBlB,EAAAC,QAAA,CAAkBkB,YAAA,oDCAlBnB,EAAAC,QAAA,CAAkBmB,SAAA,mRCuBHf,EArBI,SAAAgB,GACf,IAAMC,EAAM,CACRC,IAAQlB,WACR,MAUJ,OAPIgB,EAAMG,QACNF,EAAIG,KAAK,YACTH,EAAIG,KAAKF,IAAQjB,OAEjBgB,EAAIG,KAAK,WAITC,EAAAC,EAAAC,cAAA,KACIC,UAAWP,EAAIQ,KAAK,KACpBC,QAASV,EAAMW,sDCdZd,EAFE,SAAAG,GAAK,OAAIK,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,IAAQL,SAAUa,QAASV,EAAMU,WCErEE,EAAQ,CACV,CAACC,GAAI,IAAKC,MAAO,OAAQC,OAAO,GAChC,CAACF,GAAI,QAASC,MAAO,gBAAiBC,OAAO,GAC7C,CAACF,GAAI,gBAAiBC,MAAO,cAAeC,OAAO,IA6CxClC,6MAzCXmC,aAAe,WACXC,EAAKjB,MAAMkB,wFAGD,IAAAC,EAAAC,KACV,OAAOR,EAAMS,IAAI,SAACC,EAAMC,GACpB,OACIlB,EAAAC,EAAAC,cAAA,MAAIiB,IAAKD,GACLlB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACIZ,GAAIS,EAAKT,GACTE,MAAOO,EAAKP,MACZW,gBAAiBxB,IAAQnB,OACzB2B,QAASS,EAAKH,cAEbM,EAAKR,2CAQtB,IAAMb,EAAM,CAACC,IAAQrB,QAMrB,OAJKuC,KAAKpB,MAAMG,QACZF,EAAIG,KAAKF,IAAQpB,OAIjBuB,EAAAC,EAAAC,cAACF,EAAAC,EAAMqB,SAAP,KACItB,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,EAAIQ,KAAK,MACrBJ,EAAAC,EAAAC,cAAA,UACKa,KAAKQ,gBAGZR,KAAKpB,MAAMG,OAAUE,EAAAC,EAAAC,cAACsB,EAAD,CAAUnB,QAASU,KAAKpB,MAAMkB,UAAa,aApC7DY,aCgCNlC,6MApCXmC,MAAQ,CACJC,MAAM,KAGVC,kBAAoB,WAChBhB,EAAKiB,SAAS,CACVF,MAAOf,EAAKc,MAAMC,UAI1BG,iBAAmB,WACflB,EAAKiB,SAAS,CACVF,MAAM,6EAKV,OACI3B,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,IAAQN,QACpBS,EAAAC,EAAAC,cAAC6B,EAAD,CACIjC,OAAQiB,KAAKW,MAAMC,KACnBd,QAASE,KAAKe,mBAElB9B,EAAAC,EAAAC,cAAC8B,EAAD,CACI1B,SAAUS,KAAKa,kBACf9B,OAAQiB,KAAKW,MAAMC,OAGvB3B,EAAAC,EAAAC,cAAA,YACKa,KAAKpB,MAAMsC,kBA9BXR,yFCcNxC,EAjBI,SAACU,GAChB,IAAMC,EAAO,CAACC,IAAQZ,YAMtB,OAJIU,EAAM+B,OACN9B,EAAIG,KAAKF,IAAQF,EAAM+B,QAIvB1B,EAAAC,EAAAC,cAAA,MACIC,UAAWP,EAAIQ,KAAK,KACpBC,QAAS,kBAAMV,EAAMuC,cAAcvC,EAAMwC,OAAOC,MAE9CzC,EAAMwC,OAAOE,OCIZ5C,EAfK,SAAAE,GAAK,OACrBK,EAAAC,EAAAC,cAAA,MAAIC,UAAWN,IAAQJ,aACnBO,EAAAC,EAAAC,cAAA,cAAMP,EAAM2C,QAAQtB,IAAI,SAACmB,EAAQjB,GAC7B,OACIlB,EAAAC,EAAAC,cAACqC,EAAD,CACIpB,IAAKD,EACLiB,OAAQA,EACRD,cAAiBvC,EAAMuC,cACvBR,MAAO/B,EAAM+B,MAAQ/B,EAAM+B,MAAMS,EAAOC,IAAM,SAN1D,OCkBOrD,EApBI,SAACY,GAAD,OACfK,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,IAAQd,YACpBiB,EAAAC,EAAAC,cAAA,KAAGC,UAAWN,IAAQb,UAClBgB,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,cAASP,EAAM6C,aAAf,KADJ,OAEK7C,EAAM8C,UAGXzC,EAAAC,EAAAC,cAAA,iBAASP,EAAM6C,aAAf,SAAmC7C,EAAM+C,WAAzC,MAGJ1C,EAAAC,EAAAC,cAACyC,EAAD,CACIjB,MAAO/B,EAAM+B,MACbY,QAAS3C,EAAM2C,QACfJ,cAAiBvC,EAAMuC,oDCGpB7C,EAjBA,SAAAM,GACX,IAAMC,EAAM,CACRC,IAAQR,OACRQ,IAAQF,EAAMiD,OAGlB,OACI5C,EAAAC,EAAAC,cAAA,UACIG,QAASV,EAAMU,QACfF,UAAWP,EAAIQ,KAAK,KACpByC,SAAUlD,EAAMkD,UAEflD,EAAMsC,mBC8BJ7C,EAzCM,SAAAO,GACjB,IAAMmD,EAAeC,OAAOC,KAAKrD,EAAMsD,SAASC,OAAO,SAACC,EAAOhC,GAI3D,MAH2B,YAAvBxB,EAAMsD,QAAQ9B,IACdgC,IAEGA,GACR,GAEH,OACInD,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,IAAQT,cACpBY,EAAAC,EAAAC,cAAA,UACKP,EAAMyD,KAAKpC,IAAI,SAACqC,EAAUnC,GACvB,IAAMtB,EAAM,CACR,KAC+B,UAA/BD,EAAMsD,QAAQI,EAASjB,IAAkB,WAAa,WACtDvC,IAAQF,EAAMsD,QAAQI,EAASjB,MAGnC,OACIpC,EAAAC,EAAAC,cAAA,MACIiB,IAAKD,GAELlB,EAAAC,EAAAC,cAAA,cAASgB,EAAQ,GAHrB,QAIKmC,EAASZ,SACVzC,EAAAC,EAAAC,cAAA,KAAGC,UAAWP,EAAIQ,KAAK,WAMvCJ,EAAAC,EAAAC,cAAA,qBAAa4C,EAAb,SAAiCnD,EAAMyD,KAAKE,OAA5C,KACAtD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACqD,EAAD,CAAQlD,QAASV,EAAM6D,QAASZ,KAAK,WAArC,SACA5C,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAMjD,GAAG,KACLR,EAAAC,EAAAC,cAACqD,EAAD,CAAQX,KAAK,WAAb,wBCsFL/D,6MAvHX6C,MAAQ,CACJuB,QAAS,GACTS,YAAY,EACZC,eAAgB,EAChBC,YAAa,KACbR,KAAM,CACF,CACIX,SAAU,sDACVoB,cAAe,EACfzB,GAAI,EACJE,QAAS,CACL,CAACD,KAAM,aAAcD,GAAI,GACzB,CAACC,KAAM,gBAAiBD,GAAI,GAC5B,CAACC,KAAM,eAAgBD,GAAI,GAC3B,CAACC,KAAM,YAAaD,GAAI,KAGhC,CACIK,SAAU,4DACVoB,cAAe,EACfzB,GAAI,EACJE,QAAS,CACL,CAACD,KAAM,MAAOD,GAAI,GAClB,CAACC,KAAM,KAAMD,GAAI,SAMjC0B,qBAAuB,SAAAC,GACnB,GAAInD,EAAKc,MAAMkC,YAAa,CACxB,IAAMzC,EAAM4B,OAAOC,KAAKpC,EAAKc,MAAMkC,aAAa,GAChD,GAAoC,YAAhChD,EAAKc,MAAMkC,YAAYzC,GAC3B,OAIJ,IAAMsB,EAAW7B,EAAKc,MAAM0B,KAAKxC,EAAKc,MAAMiC,gBACtCV,EAAUrC,EAAKc,MAAMuB,QAE3B,GAAIR,EAASoB,gBAAkBE,EAAU,CAChCd,EAAQR,EAASL,MAClBa,EAAQR,EAASL,IAAM,WAG3BxB,EAAKiB,SAAS,CACV+B,YAAYb,OAAAiB,EAAA,EAAAjB,CAAA,GAAGgB,EAAW,WAC1Bd,YAGJ,IAAMgB,EAAUC,OAAOC,WAAW,WAC1BvD,EAAKwD,kBACLxD,EAAKiB,SAAS,CACV6B,YAAY,IAEhBW,QAAQC,IAAI,cAEZ1D,EAAKiB,SAAS,CACV8B,eAAgB/C,EAAKc,MAAMiC,eAAiB,EAC5CC,YAAa,OAGrBM,OAAOK,aAAaN,IACrB,UAEHhB,EAAQR,EAASL,IAAM,QACvBxB,EAAKiB,SAAS,CACV+B,YAAYb,OAAAiB,EAAA,EAAAjB,CAAA,GAAGgB,EAAW,SAC1Bd,eASZuB,aAAe,WACX5D,EAAKiB,SAAS,CACV8B,eAAgB,EAChBC,YAAa,KACbF,YAAY,EACZT,QAAS,sFARb,OAAOlC,KAAKW,MAAMiC,eAAiB,IAAM5C,KAAKW,MAAM0B,KAAKE,mDAazDe,QAAQC,IAAI,aAAcvD,KAAKpB,MAAM8E,MAAMC,OAAOtC,qCAIlD,OACIpC,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,IAAQhB,MAEpBmB,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,IAAQf,aACpBkB,EAAAC,EAAAC,cAAA,oCAEIa,KAAKW,MAAMgC,WACL1D,EAAAC,EAAAC,cAACyE,EAAD,CACE1B,QAASlC,KAAKW,MAAMuB,QACpBG,KAAMrC,KAAKW,MAAM0B,KACjBI,QAASzC,KAAKyD,eAGlBxE,EAAAC,EAAAC,cAAC0E,EAAD,CACItC,QAASvB,KAAKW,MAAM0B,KAAKrC,KAAKW,MAAMiC,gBAAgBrB,QACpDG,SAAU1B,KAAKW,MAAM0B,KAAKrC,KAAKW,MAAMiC,gBAAgBlB,SACrDP,cAAenB,KAAK+C,qBACpBpB,WAAY3B,KAAKW,MAAM0B,KAAKE,OAC5Bd,aAAczB,KAAKW,MAAMiC,eAAiB,EAC1CjC,MAAOX,KAAKW,MAAMkC,uBA/G/BnC,8BCAE/B,yLAGb,MAAO,CAAC,EAAG,EAAG,GAAGsB,IAAI,SAACoC,EAAMlC,GACxB,OACIlB,EAAAC,EAAAC,cAAA,MACIiB,IAAKD,GAELlB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAASZ,GAAI,SAAW4C,GAAxB,QACUA,uCAQtB,OACIpD,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,IAAQH,UACpBM,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,2BAEAF,EAAAC,EAAAC,cAAA,UACKa,KAAK8D,iBAGd7E,EAAAC,EAAAC,cAAA,+BA1BsBuB,aCHjBqD,mLAEb,OACI9E,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,0BAJkBuB,aCAbsD,mLAEb,OACI/E,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,iCAJyBuB,aCqB1BuD,oLAbX,OACEhF,EAAAC,EAAAC,cAAC+E,EAAD,KACIjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,KACElF,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAOC,KAAK,QAAQC,UAAWP,IAC/B9E,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAOC,KAAK,gBAAgBC,UAAWN,IACvC/E,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAOC,KAAK,YAAYC,UAAWxG,IACnCmB,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAW3F,aARrB+B,aCIE6D,QACW,cAA7BpB,OAAOqB,SAASC,UAEe,UAA7BtB,OAAOqB,SAASC,UAEhBtB,OAAOqB,SAASC,SAASf,MACvB,2DCXN,IAAMgB,GACFzF,EAAAC,EAAAC,cAACwF,EAAA,EAAD,KACI1F,EAAAC,EAAAC,cAACyF,GAAD,OAKRC,IAASC,OAAOJ,GAAKK,SAASC,eAAe,SDmHvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.e7c78215.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer__Drawer--2Nzcl\",\"close\":\"Drawer__close--3eUiV\",\"active\":\"Drawer__active--WxScd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle__MenuToggle--1mqO0\",\"open\":\"MenuToggle__open--1kMjG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz__Quiz--3J8Ip\",\"QuizWrapper\":\"Quiz__QuizWrapper--2cJp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz__ActiveQuiz--1xPLH\",\"Question\":\"ActiveQuiz__Question--2AtZS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem__AnswerItem--FMFZL\",\"success\":\"AnswerItem__success--tAKqq\",\"error\":\"AnswerItem__error--27Deq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz__FinishedQuiz--3-Dtz\",\"success\":\"FinishedQuiz__success--1N7XY\",\"error\":\"FinishedQuiz__error--34veZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button--QI7b2\",\"error\":\"Button__error--tZCD8\",\"success\":\"Button__success--3d-85\",\"primary\":\"Button__primary--2Lss2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout__Layout--2C2_c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackDrop\":\"BackDrop__BackDrop--wZny4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList__AnswersList--1WLwo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList__QuizList--2oxZy\"};","import React from 'react'\nimport classes from './MenuToggle.css'\n\nconst MenuToggle = props => {\n    const cls = [\n        classes.MenuToggle,\n        'fa'\n    ]\n\n    if (props.isOpen) {\n        cls.push('fa-times')\n        cls.push(classes.open)\n    } else {\n        cls.push('fa-bars')\n    }\n\n    return (\n        <i\n            className={cls.join(' ')}\n            onClick={props.onToggle}\n        />\n    )\n}\n\nexport default MenuToggle","import React from 'react'\nimport classes from './BackDrop.css'\n\nconst BackDrop = props => <div className={classes.BackDrop} onClick={props.onClick}/>\n\nexport default BackDrop","import React, {Component} from 'react'\nimport classes from './Drawer.css'\nimport  {NavLink} from 'react-router-dom'\nimport BackDrop from '../../UI/BackDrop/BackDrop'\n\nconst links = [\n    {to: '/', label: 'List', exact: true},\n    {to: '/auth', label: 'Authorization', exact: false},\n    {to: '/quiz-creator', label: 'Create test', exact: false}\n];\n\nclass Drawer extends Component {\n    clickHandler = () => {\n        this.props.onClose();\n    };\n\n    renderLinks() {\n        return links.map((link, index) => {\n            return (\n                <li key={index}>\n                    <NavLink\n                        to={link.to}\n                        exact={link.exact}\n                        activeClassName={classes.active}\n                        onClick={this.clickHandler}\n                    >\n                        {link.label}\n                    </NavLink>\n                </li>\n            )\n        })\n    }\n\n    render() {\n        const cls = [classes.Drawer]\n\n        if (!this.props.isOpen) {\n            cls.push(classes.close)\n        }\n\n        return (\n            <React.Fragment>\n                <nav className={cls.join(' ')}>\n                    <ul>\n                        {this.renderLinks()}\n                    </ul>\n                </nav>\n                { this.props.isOpen ?  <BackDrop onClick={this.props.onClose}/> : null }\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Drawer","import React, {Component} from 'react'\nimport classes from './Layout.css'\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle'\nimport Drawer from '../../components/Navigation/Drawer/Drawer'\n\n\nclass Layout extends Component {\n    state = {\n        menu: false\n    }\n\n    toggleMenuHandler = () => {\n        this.setState({\n            menu: !this.state.menu\n        })\n    }\n\n    menuCloseHandler = () => {\n        this.setState({\n            menu: false\n        })\n    }\n\n    render() {\n        return (\n            <div className={classes.Layout}>\n                <Drawer\n                    isOpen={this.state.menu}\n                    onClose={this.menuCloseHandler}\n                />\n                <MenuToggle\n                    onToggle={this.toggleMenuHandler}\n                    isOpen={this.state.menu}\n                />\n\n                <main>\n                    {this.props.children}\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default Layout","import React from 'react'\nimport classes from './AnswerItem.css'\n\nconst AnswerItem = (props) => {\n    const cls =  [classes.AnswerItem]\n\n    if (props.state) {\n        cls.push(classes[props.state])\n    }\n\n    return (\n        <li\n            className={cls.join(' ')}\n            onClick={() => props.onAnswerClick(props.answer.id) }\n        >\n            { props.answer.text }\n        </li>\n    )\n}\n\nexport default AnswerItem","import React from 'react'\nimport classes from './AnswersList.css'\nimport AnswerItem from '../AnswerItem/AnswerItem'\n\nconst AnswersList = props => (\n    <ul className={classes.AnswersList}>\n        <ul> {props.answers.map((answer, index) => {\n            return (\n                <AnswerItem\n                    key={index}\n                    answer={answer}\n                    onAnswerClick = {props.onAnswerClick}\n                    state={props.state ? props.state[answer.id] : null}\n                />\n            )\n        })} </ul>\n    </ul>\n)\n\nexport default AnswersList","import React from 'react'\nimport classes from './ActiveQuiz.css'\nimport AnswersList from './AnswersList/AnswersList'\n\nconst ActiveQuiz = (props) => (\n    <div className={classes.ActiveQuiz}>\n        <p className={classes.Question}>\n            <span>\n                <strong>{props.answerNumber}.</strong>&nbsp;\n                {props.question}\n            </span>\n\n            <small> {props.answerNumber} from {props.quizLength} </small>\n        </p>\n\n        <AnswersList\n            state={props.state}\n            answers={props.answers}\n            onAnswerClick = {props.onAnswerClick}\n        />\n\n    </div>\n)\n\nexport default ActiveQuiz","import React from 'react'\n\nimport classes from './Button.css'\n\nconst Button = props => {\n    const cls = [\n        classes.Button,\n        classes[props.type]\n    ]\n\n    return (\n        <button\n            onClick={props.onClick}\n            className={cls.join(' ')}\n            disabled={props.disabled}\n        >\n            {props.children}\n        </button>\n    )\n}\n\nexport default Button","import React, {Component} from 'react'\nimport classes from './FinishedQuiz.css'\nimport Button from '../UI/Button/Button'\nimport {Link} from 'react-router-dom'\n\nconst FinishedQuiz = props => {\n    const successCount = Object.keys(props.results).reduce((total, key) => {\n        if (props.results[key] === 'success') {\n            total++;\n        }\n        return total\n    }, 0)\n\n    return (\n        <div className={classes.FinishedQuiz}>\n            <ul>\n                {props.quiz.map((quizItem, index) => {\n                    const cls = [\n                        'fa',\n                        props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\n                        classes[props.results[quizItem.id]]\n                    ]\n\n                    return (\n                        <li\n                            key={index}\n                        >\n                            <strong>{index + 1}</strong>.&nbsp;\n                            {quizItem.question}\n                            <i className={cls.join(' ')}/>\n                        </li>\n                    )\n                })}\n            </ul>\n\n            <p> Correct {successCount} from {props.quiz.length} </p>\n            <div>\n                <Button onClick={props.onRetry} type='primary'>Retry</Button>\n                <Link to='/'>\n                    <Button type='success'>Go to list tests</Button>\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default FinishedQuiz","import React, {Component} from 'react'\nimport classes from './Quiz.css'\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz'\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz'\n\nclass Quiz extends Component {\n    state = {\n        results: {},        // { [id]: 'success'  or   'error' }\n        isFinished: false,\n        activeQuestion: 0,\n        answerState: null,    // { [id] : 'success'  or   'error' }\n        quiz: [\n            {\n                question: 'Which function is used to stop a setInterval timer?',\n                rightAnswerId: 2,\n                id: 1,\n                answers: [\n                    {text: 'clearTimer', id: 1},\n                    {text: 'clearInterval', id: 2},\n                    {text: 'stopInterval', id: 3},\n                    {text: 'stopTimer', id: 4}\n                ]\n            },\n            {\n                question: 'Can multiple event handlers be added to a single element?',\n                rightAnswerId: 1,\n                id: 2,\n                answers: [\n                    {text: 'Yes', id: 1},\n                    {text: 'No', id: 2}\n                ]\n            }\n        ]\n    }\n\n    onAnswerClickHandler = answerId => {\n        if (this.state.answerState) {\n            const key = Object.keys(this.state.answerState)[0]\n            if (this.state.answerState[key] === 'success') {\n            return\n            }\n        }\n\n        const question = this.state.quiz[this.state.activeQuestion]\n        const results = this.state.results\n\n        if (question.rightAnswerId === answerId) {\n            if (!results[question.id]) {\n                results[question.id] = 'success'\n            }\n\n            this.setState({\n                answerState: {[answerId]: 'success'},\n                results\n            })\n\n            const timeout = window.setTimeout(() => {\n                if (this.isQuizFinished()) {\n                    this.setState({\n                        isFinished: true\n                    })\n                    console.log('Finished!')\n                } else {\n                    this.setState({\n                        activeQuestion: this.state.activeQuestion + 1,\n                        answerState: null\n                    })\n                }\n                window.clearTimeout(timeout);\n            }, 1000)\n        } else {\n            results[question.id] = 'error'\n            this.setState({\n                answerState: {[answerId]: 'error'},\n                results                                 //  equal  results: this.state.results\n            })\n        }\n    }\n\n    isQuizFinished() {\n        return this.state.activeQuestion + 1 === this.state.quiz.length\n    }\n\n    retryHandler = () => {\n        this.setState({\n            activeQuestion: 0,\n            answerState: null,\n            isFinished: false,\n            results: {}\n        })\n    }\n\n    componentDidMount () {\n        console.log('Quiz ID = ', this.props.match.params.id);\n    }\n\n    render() {\n        return (\n            <div className={classes.Quiz}>\n\n                <div className={classes.QuizWrapper}>\n                    <h1> Answer the questions </h1>\n                    {\n                        this.state.isFinished\n                            ? <FinishedQuiz\n                                results={this.state.results}\n                                quiz={this.state.quiz}\n                                onRetry={this.retryHandler}\n                            />\n                            :\n                            <ActiveQuiz\n                                answers={this.state.quiz[this.state.activeQuestion].answers}\n                                question={this.state.quiz[this.state.activeQuestion].question}\n                                onAnswerClick={this.onAnswerClickHandler}\n                                quizLength={this.state.quiz.length}\n                                answerNumber={this.state.activeQuestion + 1}\n                                state={this.state.answerState}\n                            />\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Quiz","import React, {Component} from 'react'\nimport classes from './QuizList.css'\nimport {NavLink} from \"react-router-dom\";\n\n\nexport default class QuizList extends Component {\n\n    renderQuizes() {\n        return [1, 2, 3].map((quiz, index) => {\n            return (\n                <li\n                    key={index}\n                >\n                    <NavLink to={'/quiz/' + quiz}>\n                        Test {quiz}\n                    </NavLink>\n                </li>\n            )\n        });\n    }\n\n    render () {\n        return (\n            <div className={classes.QuizList}>\n                <div>\n                    <h1>List of tests</h1>\n\n                    <ul>\n                        {this.renderQuizes()}\n                    </ul>\n                </div>\n                <h1>Quiz List</h1>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react'\n\nexport default class Auth extends Component {\n    render () {\n        return (\n            <div>\n                <h1>Auth</h1>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react'\n\nexport default class QuizCreator extends Component {\n    render () {\n        return (\n            <div>\n                <h1>QuizCreator</h1>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport {Route, Switch} from 'react-router-dom'\nimport Layout from './hoc/Layout/Layout'\nimport Quiz from './containers/Quiz/Quiz'\nimport QuizList from './containers/QuizList/QuizList'\nimport Auth from './containers/Auth/Auth'\nimport QuizCreator from './containers/QuizCreator/QuizCreator'\n\nclass App extends Component {\n  render() {\n    return (\n      <Layout>\n          <Switch>\n            <Route path='/auth' component={Auth} />\n            <Route path='/quiz-creator' component={QuizCreator} />\n            <Route path='/quiz/:id' component={Quiz} />\n            <Route path='/' component={QuizList} />\n          </Switch>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst app = (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n);\n\n\nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}